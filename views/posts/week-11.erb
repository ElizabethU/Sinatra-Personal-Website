date: 2014-01-27


<p>Good news! My three twitterbots are active, and the main one has recently started following my classmate Ellen. I’m a little worried about having only a week to have her notice how weird it is that this person is following her. I need to make the response tweets part of the program sooner, rather than later. My problem is we’re all so busy with a feed aggregator project. Being so busy, neither Ellen nor anyone else have had much time to tweet, which means my bots don’t have much to work with, and that I’m too busy to write response code.</p>

<p>This feed aggregator, though, is really interesting. I’m a little ahead of the game because I’ve worked with APIs twice before, once for my holiday break app, with the Google Books API, and then with my bots, using the Twitter API. APIs are data gathered by a specific platform, and offered up for your use. Basically, the information is there for the taking, you just have to figure out how to grab it. So for the Twitter API, I had to figure out how to connect with the API, and how to get it to do different things like searching for tweets, tweeting, finding specific people’s tweets, and favoriting and retweeting. For both the Twitter and Google Books APIs, I used a gem. A gem for APIs basically acts as a wrapper, letting you just talk to some object called “GoogleBooks” or “Twitter” or whatever, that does most of the heavy lifting for you.</p>

<p>This week, I was assigned to work on the Tumblr API for this project. Being a little more experienced, and the tumblr gem not looking particularly comprehensive, I decided to try working straight with the API. I really recommend using a gem, if you’re new to APIs. An API, in its natural state, is like a giant, horrible to parse hash, stored with many levels and meta data at each level. A gem really parses that out for you, having made methods that will get to each specific part of the hash you could want. Doing that by hand instead, I have learned a lot about the structure of such hashes, but even more about why people use a gem in the first place.</p>
 
<p>Currently, Tumblr can add posts to our feed aggregator, but since there are 7 different types of tumblr post that I’m pushing into one object, I have to save different things from the hash, depending on the type. I am on type 4 of 7, already having text and photos, which comprise 99.9% of all tumblr posts. The tumblr gem did not look like it would do these things for me (I may be wrong) as automatically as I liked, so this is work I’d have to do anyway, and afterward, if I have sometime, I feel like I’ve learned enough out of this to make a better tumblr gem than the one tumblr has released, but it’s been horrific. Always use a gem, kids. And then don’t, one time, to see all this hash nonsense. But then immediately go back to using a gem.</p>